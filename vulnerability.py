import requests
import re

def get_version(url):
    # Realiza una solicitud GET al sitio web y extrae la versión del software utilizado en el sitio web
    try:
        response = requests.get(url)
        response.raise_for_status()
        match = re.search(r'version (\d\.\d\.\d)', response.text)
        if match:
            return match.group(1)
        else:
            return None
    except:
        return None

def check_vulnerability(version):
    # Compara la versión del software con una base de datos de vulnerabilidades conocidas y devuelve una lista de vulnerabilidades
    vulns = []
    database = {'1.0.0': ['CVE-2018-1234', 'CVE-2019-5678'], '1.0.1': ['CVE-2020-1234', 'CVE-2020-5678'], '1.1.0': ['CVE-2021-1234', 'CVE-2021-5678']}
    if version in database:
        vulns = database[version]
    return vulns

def main():
    # Configura el sitio web objetivo
    url = 'https://www.example.com'
    
    # Obtiene la versión del software utilizado en el sitio web
    version = get_version(url)
    if version:
        print(f"La versión del software utilizado en el sitio web es {version}")
    else:
        print("No se pudo obtener la versión del software utilizado en el sitio web")

    # Verifica si la versión del software tiene vulnerabilidades conocidas
    vulns = check_vulnerability(version)
    if vulns:
        print("Se han encontrado las siguientes vulnerabilidades:")
        for vuln in vulns:
            print(vuln)
    else:
        print("No se han encontrado vulnerabilidades conocidas")

if __name__ == '__main__':
    main()
